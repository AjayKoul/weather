{"version":3,"sources":["myStyle.module.css","DayCard.js","unitToggle.js","form.js","weekContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","moment","require","Daycard","reading","unitType","newDate","Date","setTime","dt","imgurl","weather","id","celsius","Math","round","main","temp","fahrenheit","Fragment","className","styles","daycards","onClick","document","getElementById","style","display","format","opacity","description","moreInfo","moreInfoChild","close","UnitToggle","updateDegreeUnit","type","name","value","fontSize","CityName","getWeather","searchDiv","search","onKeyUp","e","keyCode","input","placeholder","config","city","weatherNowObj","imgUrl","desc","max","min","humidity","pressure","sunrise","sunset","celsiusMax","fahrenheitMax","celsiusMin","fahrenheitMin","newDateSunset","WeekContainer","state","fullData","dailyData","weatherNow","undefined","whenMounted","forecastUrl","process","fetch","then","res","ok","json","alert","window","location","reload","data","list","filter","dt_txt","includes","setState","console","log","querySelector","textContent","country","weatherUrl","response","Data","temp_max","temp_min","sys","componentDidMount","event","target","formatDayCard","map","index","key","length","preventDefault","this","marginLeft","width","color","marginBottom","marginTop","mainWeather","mainWeatherLeft","marginRight","flexDirection","alignItems","mainWeatherRight","mainRightChild","textAlign","mycard","React","Component","App","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e9a092e9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWeather\":\"myStyle_mainWeather__1l7bU\",\"mycard\":\"myStyle_mycard__12rED\",\"daycards\":\"myStyle_daycards__3ujYR\",\"moreInfo\":\"myStyle_moreInfo__1Q5pI\",\"moreInfoChild\":\"myStyle_moreInfoChild__2XkQL\",\"close\":\"myStyle_close__JFhEZ\",\"searchDiv\":\"myStyle_searchDiv__3p5n2\",\"search\":\"myStyle_search__fVhz1\",\"input\":\"myStyle_input__ZxL_W\",\"mainWeatherLeft\":\"myStyle_mainWeatherLeft__KkbZ8\",\"mainWeatherRight\":\"myStyle_mainWeatherRight__2ML5A\",\"mainRightChild\":\"myStyle_mainRightChild__1EPvH\",\"celsius\":\"myStyle_celsius__1gWWh\",\"fahrenheit\":\"myStyle_fahrenheit__1Bbhz\"};","import React from 'react';\r\nimport styles from './myStyle.module.css';\r\nvar moment = require('moment');\r\nconst Daycard=({reading, unitType})=>{\r\n\r\n    let newDate = new Date();\r\n    newDate.setTime(reading.dt*1000);\r\n    const imgurl=`owf owf-${reading.weather[0].id} owf-5x`;\r\n    const celsius =Math.round(reading.main.temp)\r\n    const fahrenheit=Math.round((celsius*9/5)+32);\r\n    const moreInfoCall=()=> {\r\n        document.getElementById(\"moreInfo\").style.display=\"block\";\r\n    }\r\n    return(\r\n        <React.Fragment>\r\n        <div id=\"cardd\" className={styles.daycards} onClick={moreInfoCall}>\r\n            <h3>{moment(newDate).format('dddd')}</h3>\r\n            <h5 style={{opacity:\"0.5\"}}>{moment(newDate).format('MMMM Do')}</h5>\r\n            <i className={imgurl}></i>\r\n            <h2>{unitType === \"celsius\" ? celsius+\"°C\" : fahrenheit+\"°F\"}</h2>\r\n            <h4>{reading.weather[0].description}</h4>\r\n        </div>\r\n        <div className={styles.moreInfo} id=\"moreInfo\">\r\n            <div className={styles.moreInfoChild}>\r\n                <i className={styles.close} onClick={()=> document.getElementById(\"moreInfo\").style.display=\"none\"}>&times;</i>\r\n                <h1>haa bhai aa gye majje</h1>\r\n                <h2></h2>\r\n            </div>\r\n        </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\nexport default Daycard;","import React from 'react';\r\nimport styles from './myStyle.module.css';\r\nfunction UnitToggle({unitType,updateDegreeUnit}){\r\n    return(\r\n        <React.Fragment>\r\n        <div>\r\n            <button className={styles.celsius} type=\"radio\" name=\"degree-type\" id=\"celsius\" value=\"celsius\" onClick={updateDegreeUnit}>C</button>\r\n            <i style={{fontSize:\"20px\"}}>|</i>\r\n            <button className={styles.fahrenheit} type=\"radio\" name=\"degree-type\" id=\"fahrenheit\" value=\"fahrenheit\" onClick={updateDegreeUnit}>F</button>\r\n            \r\n        </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\nexport default UnitToggle;","import React from 'react';\r\nimport styles from './myStyle.module.css';\r\nconst CityName = ({getWeather}) =>{\r\n    function myFunc(e){\r\n        if(e.keyCode===13)\r\n        getWeather(e)\r\n    }\r\n    return(\r\n        <span className={styles.searchDiv}>\r\n               <button className={styles.search}>&#128269;</button>\r\n                <input type=\"text\" name=\"city\" onKeyUp={myFunc} className={styles.input} placeholder=\"City Name\"/>\r\n        </span>\r\n    )\r\n};\r\nexport default CityName;","import React from'react';\r\nimport Daycard from './DayCard';\r\nimport UnitToggle from './unitToggle';\r\nimport CityName from './form';\r\nimport styles from './myStyle.module.css';\r\n\r\nrequire('dotenv').config();\r\nvar moment=require('moment');\r\nlet city=\"delhi\";\r\nlet weatherNowObj={\r\n    imgUrl:null,\r\n    temp:null,\r\n    desc:null,\r\n    max:null,\r\n    min:null,\r\n    humidity:null,\r\n    pressure:null,\r\n    sunrise:null,\r\n    sunset:null,\r\n    celsiusMax:null,\r\n    fahrenheitMax:null,\r\n    celsiusMin:null,\r\n    fahrenheitMin:null,\r\n    newDate:null,\r\n    newDateSunset:null,\r\n    celsius:null,\r\n    fahrenheit:null\r\n};\r\nclass WeekContainer extends React.Component{\r\n    state={\r\n        fullData:[],\r\n        dailyData:[],\r\n        weatherNow:undefined,\r\n        unitType: \"celsius\"\r\n    }\r\n       whenMounted=()=>{\r\n    const forecastUrl =`http://api.openweathermap.org/data/2.5/forecast?q=${city}&units=Metric&APPID=${process.env.REACT_APP_KEY}`;\r\n    fetch(forecastUrl)\r\n    .then(res => { //if user enters wrong city name and 404 occurs then below code will display alert and reload tha page\r\n        if(res.ok){ \r\n            return res.json()\r\n        }else{\r\n            alert(\"City name not found\")}\r\n            city=\"delhi\";\r\n            window.location.reload(false);\r\n        })\r\n    .then(data => {  \r\n        const dailyData=data.list.filter(reading => reading.dt_txt.includes(\"15:00:00\"));\r\n        this.setState({\r\n            fullData: data,\r\n            dailyData: dailyData\r\n        },() => {console.log(this.state)\r\n            document.querySelector(\"h1\").textContent=this.state.fullData.city.name+\",\"+this.state.fullData.city.country;\r\n        })\r\n        //IMPORTANT: SETSTATE IS ASYNCHRONOUS CAN'T TELL WHEN WILL IT EXECUTE SO USE CALLBACK SETSTATE\r\n    })\r\n\r\n    const weatherUrl =`http://api.openweathermap.org/data/2.5/weather?q=${city}&units=Metric&APPID=${process.env.REACT_APP_KEY}`;\r\n    fetch(weatherUrl)\r\n    .then(response=> response.json())\r\n    .then(Data => this.setState({weatherNow: Data},()=>{\r\n        weatherNowObj.imgUrl=`owf owf-${this.state.weatherNow.weather[0].id} owf-5x`;\r\n        weatherNowObj.temp=Math.round(this.state.weatherNow.main.temp);\r\n        weatherNowObj.celsius=Math.round(weatherNowObj.temp);\r\n        weatherNowObj.fahrenheit=Math.round((weatherNowObj.celsius*9/5)+32);\r\n        weatherNowObj.desc=this.state.weatherNow.weather[0].main;\r\n        weatherNowObj.max=this.state.weatherNow.main.temp_max;\r\n        weatherNowObj.min=this.state.weatherNow.main.temp_min;\r\n        weatherNowObj.pressure=this.state.weatherNow.main.pressure;\r\n        weatherNowObj.humidity=this.state.weatherNow.main.humidity;\r\n        weatherNowObj.sunrise=this.state.weatherNow.sys.sunrise;\r\n        weatherNowObj.sunset=this.state.weatherNow.sys.sunset;\r\n        weatherNowObj.celsiusMax =Math.round(weatherNowObj.max);\r\n        weatherNowObj.fahrenheitMax=Math.round((weatherNowObj.celsiusMax*9/5)+32);\r\n        weatherNowObj.celsiusMin =Math.round(weatherNowObj.min);\r\n        weatherNowObj.fahrenheitMin=Math.round((weatherNowObj.celsiusMin*9/5)+32);\r\n        weatherNowObj.newDate=new Date();\r\n        weatherNowObj.newDate.setTime(weatherNowObj.sunrise*1000)\r\n        weatherNowObj.newDateSunset=new Date();\r\n        weatherNowObj.newDateSunset.setTime(weatherNowObj.sunset*1000)\r\n    }))\r\n    };\r\n    componentDidMount=()=>{\r\n        this.whenMounted();\r\n    };\r\n\r\n    updateDegreeUnit=event=>{\r\n        this.setState({unitType: event.target.value})\r\n    };\r\n\r\n    formatDayCard = () => {\r\n        return this.state.dailyData.map((reading,index) => <Daycard reading={reading} key={index} unitType={this.state.unitType}/>)\r\n    };\r\n    getWeather=e=>{\r\n        city=e.target.value;\r\n        if(e.target.value.length!==0){\r\n        e.preventDefault();\r\n        this.whenMounted();\r\n        e.target.value=\"\"\r\n        }else{\r\n            e.preventDefault()\r\n            alert(\"Please enter City name\")\r\n        }\r\n    };\r\n    render(){\r\n        return(\r\n            <div>\r\n                <CityName getWeather={this.getWeather}/>\r\n                <div style={{marginLeft:\"15px\",width:\"100%\"}}>\r\n                        <h1 style={{color:\"white\",marginBottom:\"10px\",fontSize:\"-webkit-xxx-large\"}}></h1>\r\n                        <h3 style={{color:\"white\",marginTop:\"0\"}}>{moment().format('dddd Do MMMM')}</h3>\r\n                    </div>\r\n                    <div className={styles.mainWeather}>\r\n                    <div className={styles.mainWeatherLeft}>\r\n                        <div>\r\n                        <i style={{marginTop:\"60px\",marginRight:\"30px\"}} className={weatherNowObj.imgUrl}></i>                                     \r\n                        </div>\r\n                        <div>\r\n                            <span style={{display:\"flex\",flexDirection:\"row\",alignItems:\"center\"}}>\r\n                            <h2 style={{fontSize:\"70px\",marginBottom:\"3px\"}}>{this.state.unitType===\"celsius\"?weatherNowObj.celsius:weatherNowObj.fahrenheit}°</h2>\r\n                            <UnitToggle unitType={this.state.unitType} updateDegreeUnit={this.updateDegreeUnit}/>\r\n                            </span>\r\n                            <h3>{weatherNowObj.desc}</h3>\r\n                        </div>\r\n                    </div>\r\n                    <div className={styles.mainWeatherRight}>\r\n                        <div className={styles.mainRightChild}>\r\n                            <h4>{weatherNowObj.humidity}</h4>\r\n                            <h4>Humidity</h4>\r\n                        </div>\r\n                        <div className={styles.mainRightChild}>\r\n                            <h4>{this.state.unitType==\"celsius\"?weatherNowObj.celsiusMax:weatherNowObj.fahrenheitMax}°</h4>\r\n                            <h4>Max</h4>\r\n                        </div>        \r\n                        <div className={styles.mainRightChild}>\r\n                                <h4>{moment(weatherNowObj.newDate).format('HH:mm')}</h4>\r\n                                <h4>Sunrise</h4>\r\n                        </div>\r\n                        <div className={styles.mainRightChild}>\r\n                            <h4>{weatherNowObj.pressure}</h4>\r\n                            <h4>Pressure</h4>\r\n                        </div>\r\n                        <div className={styles.mainRightChild}>\r\n                                <h4>{this.state.unitType==\"celsius\"?weatherNowObj.celsiusMin:weatherNowObj.fahrenheitMin}°</h4>\r\n                                <h4>Min</h4>\r\n                        </div>\r\n                        <div className={styles.mainRightChild}>\r\n                                <h4>{moment(weatherNowObj.newDateSunset).format('HH:mm')}</h4>\r\n                                <h4>Sunset</h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <h2 style={{color:\"white\",textAlign:\"start\",marginLeft:\"10px\",fontSize:\"40px\"}}>5 Day Forecast</h2>\r\n                </div>\r\n                <br/>\r\n        <div className={styles.mycard}> \r\n            {this.formatDayCard()}\r\n        </div>\r\n        </div>\r\n      );\r\n    }\r\n}\r\nexport default WeekContainer;","import React from 'react';\nimport './App.css';\nimport WeekContainer from './weekContainer';\nfunction App() {\n  return  (\n    \n  <div className=\"App\">\n    <WeekContainer/>\n  </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}